function T(n,e={}){let{signal:t}=e;return t?.aborted?Promise.reject(new DOMException("Delay was aborted.","AbortError")):new Promise((r,s)=>{let o=()=>{clearTimeout(a),s(new DOMException("Delay was aborted.","AbortError"))},a=setTimeout(()=>{t?.removeEventListener("abort",o),r()},n);t?.addEventListener("abort",o,{once:!0})})}var w="Server closed",L=5,S=1e3,m=class{#r;#s;#i;#e=!1;#t=new Set;#n=new Set;#a;constructor(e){this.#r=e.port,this.#s=e.hostname,this.#i=e.handler,this.#a=e.onError??function(t){return console.error(t),new Response("Internal Server Error",{status:500})}}async serve(e){if(this.#e)throw new Deno.errors.Http(w);this.#f(e);try{return await this.#h(e)}finally{this.#u(e);try{e.close()}catch{}}}async listenAndServe(){if(this.#e)throw new Deno.errors.Http(w);let e=Deno.listen({port:this.#r??80,hostname:this.#s??"0.0.0.0",transport:"tcp"});return await this.serve(e)}async listenAndServeTls(e,t){if(this.#e)throw new Deno.errors.Http(w);let r=Deno.listenTls({port:this.#r??443,hostname:this.#s??"0.0.0.0",certFile:e,keyFile:t,transport:"tcp"});return await this.serve(r)}close(){if(this.#e)throw new Deno.errors.Http(w);this.#e=!0;for(let e of this.#t)try{e.close()}catch{}this.#t.clear();for(let e of this.#n)this.#o(e);this.#n.clear()}get closed(){return this.#e}get addrs(){return Array.from(this.#t).map(e=>e.addr)}async#l(e,t,r){let s;try{s=await this.#i(e.request,r)}catch(o){s=await this.#a(o)}try{await e.respondWith(s)}catch{return this.#o(t)}}async#c(e,t){for(;!this.#e;){let r;try{r=await e.nextRequest()}catch{break}if(r===null)break;this.#l(r,e,t)}this.#o(e)}async#h(e){let t;for(;!this.#e;){let r;try{r=await e.accept()}catch(i){if(i instanceof Deno.errors.BadResource||i instanceof Deno.errors.InvalidData||i instanceof Deno.errors.UnexpectedEof||i instanceof Deno.errors.ConnectionReset||i instanceof Deno.errors.NotConnected){t?t*=2:t=L,t>=1e3&&(t=S),await T(t);continue}throw i}t=void 0;let s;try{s=Deno.serveHttp(r)}catch{continue}this.#d(s);let o={localAddr:r.localAddr,remoteAddr:r.remoteAddr};this.#c(s,o)}}#o(e){this.#p(e);try{e.close()}catch{}}#f(e){this.#t.add(e)}#u(e){this.#t.delete(e)}#d(e){this.#n.add(e)}#p(e){this.#n.delete(e)}};function R(n){return n==="0.0.0.0"?"localhost":n}async function g(n,e={}){let t=e.port??8e3,r=e.hostname??"0.0.0.0",s=new m({port:t,hostname:r,handler:n,onError:e.onError});e?.signal?.addEventListener("abort",()=>s.close(),{once:!0});let o=s.listenAndServe();return t=s.addrs[0].port,"onListen"in e?e.onListen?.({port:t,hostname:r}):console.log(`Listening on http://${R(r)}:${t}/`),await o}var d={},x=new TextDecoder;d.show=async function(n){let e=await Deno.run({stdout:"piped",cmd:["wg","show",n]}).output(),t=x.decode(e).split(`

`),r=[],s;return t.forEach(function(o){let i=o.slice(0,o.indexOf(": ")),a={};i=="peer"?(a.type="peer",o.split(`
`).forEach(function(l){let c=l.indexOf(": "),h=l.slice(0,c),u=l.slice(c+2);h=="peer"?a.pub=u:h=="  endpoint"?a.end=u:h=="  allowed ips"&&(a.range=u.replaceAll(" ",""))})):i=="interface"&&(a.type="self",o.split(`
`).forEach(function(l){let c=l.indexOf(": "),h=l.slice(0,c),u=l.slice(c+2);h=="  public key"&&(a.pub=u)}),s=a),i?.length>2&&r.push(a)}),{ifname:n,peers:r,self:s}};d.setPeer=function(n,e,t=30){let r=["wg","set",n,"peer",e.pub,"persistent-keepalive",t.toString()];e.end&&(r.push("endpoint"),r.push(e.end)),e.range&&(r.push("allowed-ips"),r.push(e.range)),Deno.run({cmd:r})};d.delPeer=function(n,e){Deno.run({cmd:["wg","set",n,"peer",e]})};var y=function(n,e){let t=Math.min(n.length,e.length),r=n.slice(0,t),s=e.slice(0,t),o=0,i=0;for(;i<t&&o==0;)o=Math.sign(r[i]-s[i]),i++;return o},E=function(){this.pool=[],this.point=function(n,e=!1){if(this.pool.length>0){let t=this.pool.length,r=1<<Math.floor(Math.log2(t)),s=r,o=64;for(;r>=1&&o>=0;){if(o<=0)throw new Error("TTL reached.");if(s==t)s-=r;else{let a=y(n,this.pool[s]);switch(a){case 0:{o=0;break}case 1:{s+r<=t&&(s+=r);break}case-1:{s!=0&&(s-=r);break}default:console.warn(`Unexpected result ${a}.`)}}r=r>>1,o--}let i=!0;if(s>=this.pool.length)i=!1;else{let a=this;this.pool[s].forEach(function(l,c,h){i&&l!=n[c]&&(i=!1)}),!i&&y(n,this.pool[s])>0&&s++}return i||e?s:-1}else return e?0:-1},this.add=function(n,e){return n.data=e,this.pool.splice(this.point(n,!0),0,n),this},this.default=function(n){console.warn(`No match for "${n}". Default action not defined.`)},this.get=function(n){let e=this.point(n);if(e>-1)return this.pool[e].data;this.default(n)},this.run=function(n,...e){let t=this.point(n);t>-1?this.pool[t].data(n.slice(this.pool[t].length),...e):this.default(n,...e)}};var v=class extends E{reply(n,...e){let t=[],r="",s=new Response("API Not Found",{status:404});Array.from(n).forEach(function(i){t.push(i.charCodeAt(0))});let o=this.point(t);return o>-1?(t.slice(this.pool[o].length).forEach(function(i){r+=String.fromCharCode(i)}),this.pool[o].data(r,...e)||s):s}handle(n,e){let t=[];return Array.from(n).forEach(function(r){t.push(r.charCodeAt(0))}),this.add(t,e)}constructor(...n){super(...n)}};var p,f=new v;f.handle("/networks",function(n){return request.method!="GET"?p:new Response(conf.networks,{headers:{"Content-Type":"application/json"}})});f.handle("/messages",function(n,e,t){if(e.method!="GET")return p});f.handle("/update/",function(n,e){if(e.method!="POST")return p});f.handle("/detail/",function(n,e){e.method=="GET"||e.method=="PUT"});f.handle("/get/",async function(n,e){let t=n.split("/");if(e.method!="GET")return p;if(conf.networks.indexOf(t[0])<0)return new Response(`{"ifname":"${t[0]}", "error": "noPermission"}`,{status:403});let r=await d.show(t[0]);if(conf?.self[t[0]]){let o=conf?.self[t[0]];o?.end&&(r.self.end=o.end),o?.range&&(r.self.range=o.range),r.heartbeat=o.heartbeat||30}let s=JSON.stringify(r);return r.peers.length>0?new Response(s,{headers:{"Content-Type":"application/json"}}):new Response(`{"ifname":"${t[0]}", "error": "notFound"}`,{status:404})});var b=async function(n,e){let t=new URL(n.url);return p=new Response("Bad request",{status:400}),f.reply(`${t.pathname}${t.search}${t.hash}`,n,e)};var A=Deno.args[0]||"registry.json";console.info(`Reading configuration from: ${A}`);var D="{}";try{D=await Deno.readTextFile(A)}catch{}self.conf=JSON.parse(D);g(async function(n,e){let t=e.remoteAddr.hostname;return await b(n,t)},{hostname:conf.listen||"127.0.0.1",port:conf.listenPort||8e3});
